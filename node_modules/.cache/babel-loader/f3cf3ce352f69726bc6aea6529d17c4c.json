{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/preview_link.js\";\n\n/**\n * Preview link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\nimport PropTypes from 'prop-types';\nimport './styles/preview_link.scss';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreviewLink = props => {\n  // I will keep this log here so you can confirm unnecessary link re-renders are not ocurring\n  console.log(\"rendering preview link\");\n  const linkBackgroundStyle = {\n    backgroundColor: props.linkBackgroundColor\n  };\n  const linkColor = {\n    color: props.linkColor\n  };\n  const isLinkRoundedEdgeCSSClass = props.isLinkEdgeRounded ? 'rounded-link-edge' : '';\n\n  const trackLinkClick = () => {\n    const updatedClicks = props.linkClicks + 1;\n    props.setUserLinks(prevUserLinks => {\n      let updatedUserLinks = [...prevUserLinks];\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === props.linkId);\n\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n\n      updatedUserLinks[index].clicks = updatedClicks;\n      console.log(\"final array\");\n      console.log(updatedUserLinks);\n      return updatedUserLinks;\n    });\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        clicks: updatedClicks\n      })\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${props.linkId}`;\n    fetch(url, requestOptions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `live-link-item ${isLinkRoundedEdgeCSSClass}`,\n    style: linkBackgroundColor,\n    onClick: trackLinkClick,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"live-link-anchor\",\n      href: props.linkUrl,\n      style: linkColor,\n      target: \"_blank\",\n      children: props.linkTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PreviewLink;\nPreviewLink.propTypes = {\n  linkId: PropTypes.number.isRequired,\n  linkTitle: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  linkClicks: PropTypes.number.isRequired,\n  setUserLinks: PropTypes.func.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\nexport default _c2 = /*#__PURE__*/React.memo(PreviewLink);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PreviewLink\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/preview_link.js"],"names":["PropTypes","React","useState","PreviewLink","props","console","log","linkBackgroundStyle","backgroundColor","linkBackgroundColor","linkColor","color","isLinkRoundedEdgeCSSClass","isLinkEdgeRounded","trackLinkClick","updatedClicks","linkClicks","setUserLinks","prevUserLinks","updatedUserLinks","index","findIndex","userLink","id","linkId","clicks","requestOptions","method","headers","body","JSON","stringify","url","fetch","linkUrl","linkTitle","propTypes","number","isRequired","string","func","bool","memo"],"mappings":"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","sourcesContent":["\n/**\n * Preview link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\nimport PropTypes from 'prop-types';\nimport './styles/preview_link.scss';\nimport React, {useState} from 'react';\n\nconst PreviewLink = (props) => {\n  // I will keep this log here so you can confirm unnecessary link re-renders are not ocurring\n  console.log(\"rendering preview link\");\n\n  const linkBackgroundStyle = {\n    backgroundColor: props.linkBackgroundColor\n  };\n\n  const linkColor = {\n    color: props.linkColor\n  }\n\n  const isLinkRoundedEdgeCSSClass = props.isLinkEdgeRounded ? 'rounded-link-edge' : '';\n\n  const trackLinkClick = () => {\n    const updatedClicks = props.linkClicks + 1;\n    props.setUserLinks(prevUserLinks => {\n      let updatedUserLinks = [...prevUserLinks]\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === props.linkId);\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n  \n      updatedUserLinks[index].clicks = updatedClicks;\n      console.log(\"final array\");\n      console.log(updatedUserLinks);\n      return updatedUserLinks;\n    });\n\n\n    const requestOptions = {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({clicks: updatedClicks})\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${props.linkId}`;\n    fetch(url, requestOptions);\n  };\n\n  return (\n    <li className={`live-link-item ${isLinkRoundedEdgeCSSClass}`} style={linkBackgroundColor} onClick={trackLinkClick}>\n      <a className=\"live-link-anchor\" href={props.linkUrl} style={linkColor} target=\"_blank\">{props.linkTitle}</a>\n    </li>\n  );\n }\n\nPreviewLink.propTypes = {\n  linkId: PropTypes.number.isRequired,\n  linkTitle: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  linkClicks: PropTypes.number.isRequired,\n  setUserLinks: PropTypes.func.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\n \nexport default React.memo(PreviewLink);"]},"metadata":{},"sourceType":"module"}