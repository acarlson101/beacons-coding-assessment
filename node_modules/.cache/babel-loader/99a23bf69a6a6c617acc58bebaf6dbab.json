{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/settings_modal.js\",\n    _s = $RefreshSig$();\n\n/**\n * Modal to update settings\n *\n * @copyright 2021 Beacons - All rights reserved\n */\nimport './styles/settings_modal.scss';\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SettingsModal(props) {\n  _s();\n\n  const [inputLinkBackgroundColor, setInputLinkBackgroundColor] = useState(props.linkBackgroundColor);\n  const [inputLinkColor, setInputLinkColor] = useState(props.linkColor);\n  const [inputIsLinkEdgeRounded, setInputIsLinkEdgeRounded] = useState(props.isLinkEdgeRounded);\n\n  const handleLinkBackgroundColor = event => {\n    const intputLinkBackgroundColor = event.target.value;\n    setInputLinkBackgroundColor(inputLinkBackgroundColor);\n  };\n\n  const handleLinkColor = event => {\n    const intputLinkColor = event.target.value;\n    setInputLinkColor(intputLinkColor);\n  };\n\n  const handleLinkEdgesChange = inputIsLinkEdgeRounded => {\n    setInputIsLinkEdgeRounded(inputIsLinkEdgeRounded);\n  };\n\n  const handleSubmit = () => {\n    props.setLinkBackgroundColor(inputLinkBackgroundColor);\n    props.setLinkColor(inputLinkColor);\n    props.setIsLinkEdgeRounded(inputIsLinkEdgeRounded);\n    props.setShowSettings(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: () => props.setShowSettings(false),\n    animation: false,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"settings-form-label\",\n        children: \"Link Background Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"change-link-background\",\n        type: \"text\",\n        placeholder: inputLinkBackgroundColor,\n        onChange: handleLinkBackgroundColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"settings-form-label\",\n        children: \"Link Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"change-link-color\",\n        type: \"text\",\n        placeholder: inputLinkColor,\n        onChange: handleLinkColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"settings-form-label\",\n        children: \"Link Styling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link-corner-styling-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"link-style-radio-btn\",\n          type: \"radio\",\n          id: \"rounded-option\",\n          name: \"rounded-option\",\n          value: \"round\",\n          checked: true,\n          onChange: () => handleLinkEdgesChange(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"rounded-option\",\n          children: \"Rounded Corners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"link-style-radio-btn\",\n          type: \"radio\",\n          id: \"straight-option\",\n          name: \"straight-option\",\n          value: \"straight\",\n          onChange: () => handleLinkEdgesChange(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"straight-option\",\n          children: \"Straight Corners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-link-btn\",\n        onClick: handleSubmit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SettingsModal, \"iEPPQjWqkABx3TDqGnYm5WCk5cw=\");\n\n_c = SettingsModal;\nSettingsModal.propTypes = {\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired,\n  setLinkBackgroundColor: PropTypes.func.isRequired,\n  setLinkColor: PropTypes.func.isRequired,\n  setIsLinkEdgeRounded: PropTypes.func.isRequired,\n  setShowSettings: PropTypes.func.isRequired\n};\nexport default SettingsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsModal\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/settings_modal.js"],"names":["React","useState","useEffect","Modal","Button","PropTypes","SettingsModal","props","inputLinkBackgroundColor","setInputLinkBackgroundColor","linkBackgroundColor","inputLinkColor","setInputLinkColor","linkColor","inputIsLinkEdgeRounded","setInputIsLinkEdgeRounded","isLinkEdgeRounded","handleLinkBackgroundColor","event","intputLinkBackgroundColor","target","value","handleLinkColor","intputLinkColor","handleLinkEdgesChange","handleSubmit","setLinkBackgroundColor","setLinkColor","setIsLinkEdgeRounded","setShowSettings","propTypes","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["\n/**\n * Modal to update settings\n *\n * @copyright 2021 Beacons - All rights reserved\n */\n\n import './styles/settings_modal.scss';\n import React, {useState, useEffect} from 'react';\n import {Modal, Button} from 'react-bootstrap';\n import PropTypes from 'prop-types';\n\nfunction SettingsModal(props) {\n  const [inputLinkBackgroundColor, setInputLinkBackgroundColor] = useState(props.linkBackgroundColor);\n  const [inputLinkColor, setInputLinkColor] = useState(props.linkColor);\n  const [inputIsLinkEdgeRounded, setInputIsLinkEdgeRounded] = useState(props.isLinkEdgeRounded);\n\nconst handleLinkBackgroundColor = (event) => {\n  const intputLinkBackgroundColor = event.target.value;\n  setInputLinkBackgroundColor(inputLinkBackgroundColor);\n};\n\nconst handleLinkColor = (event) => {\n  const intputLinkColor = event.target.value;\n  setInputLinkColor(intputLinkColor);\n};\n\nconst handleLinkEdgesChange = (inputIsLinkEdgeRounded) => {\n  setInputIsLinkEdgeRounded(inputIsLinkEdgeRounded);\n};\n\nconst handleSubmit = () => {\n  props.setLinkBackgroundColor(inputLinkBackgroundColor);\n  props.setLinkColor(inputLinkColor);\n  props.setIsLinkEdgeRounded(inputIsLinkEdgeRounded);\n  props.setShowSettings(false);\n};\n\n\n  return (\n    <Modal show={true} onHide={() => props.setShowSettings(false)} animation={false}>\n    <Modal.Header closeButton>\n      <Modal.Title>Settings</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n    <span className=\"settings-form-label\">Link Background Color</span>\n    <input className=\"change-link-background\" type=\"text\" placeholder={inputLinkBackgroundColor} onChange={handleLinkBackgroundColor} />\n    <span className=\"settings-form-label\">Link Color</span>\n    <input className=\"change-link-color\" type=\"text\" placeholder={inputLinkColor} onChange={handleLinkColor}/>\n    <span className=\"settings-form-label\">Link Styling</span>\n    <div className=\"link-corner-styling-selection\">\n      <input className=\"link-style-radio-btn\" type=\"radio\" id=\"rounded-option\" name=\"rounded-option\" value=\"round\" checked onChange={() => handleLinkEdgesChange(true)} />\n      <label for=\"rounded-option\">Rounded Corners</label>\n      <input className=\"link-style-radio-btn\" type=\"radio\" id=\"straight-option\" name=\"straight-option\" value=\"straight\" onChange={() => handleLinkEdgesChange(false)}/>\n      <label for=\"straight-option\">Straight Corners</label> \n    </div>\n     <button className=\"add-link-btn\" onClick={handleSubmit}>Save</button>\n    </Modal.Body>\n  </Modal>\n  );\n}\n\nSettingsModal.propTypes = {\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired,\n  setLinkBackgroundColor: PropTypes.func.isRequired,\n  setLinkColor: PropTypes.func.isRequired,\n  setIsLinkEdgeRounded: PropTypes.func.isRequired,\n  setShowSettings: PropTypes.func.isRequired\n};\n\nexport default SettingsModal;"]},"metadata":{},"sourceType":"module"}