{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_editor.js\",\n    _s = $RefreshSig$();\n\n/**\n * Area where users can edit their links\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\nimport './styles/links_editor.scss';\nimport CreateLinkModal from './create_link_modal';\nimport { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport EditLinkModal from './edit_link_modal';\nimport EditableLink from './editable_link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LinksEditor(props) {\n  _s();\n\n  const [showNewLinkModal, setShowNewLinkModal] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showEditLinkModal, setShowEditLinkModal] = useState(false);\n  const [editLink, setEditLink] = useState(null);\n  const [linkBackgroundColor, setLinkBackgroundColor] = useState('#adff2f');\n  const [linkColor, setLinkColor] = useState('#000000');\n\n  const handleCloseSettings = () => setShowSettings(false);\n\n  const handleShowSettings = () => setShowSettings(true);\n\n  const handleDeleteLink = useCallback(linkId => {\n    props.setUserLinks(prevUserLinks => {\n      let updatedUserLinks = [...prevUserLinks];\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === linkId);\n\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n\n      updatedUserLinks.splice(index, 1);\n      return updatedUserLinks;\n    });\n    const requestOptions = {\n      method: 'DELETE'\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${linkId}`;\n    fetch(url, requestOptions);\n  }, []);\n  const handleEditLink = useCallback(linkId => {\n    const index = props.userLinks.findIndex(userLink => userLink.id === linkId);\n\n    if (index == -1) {\n      return;\n    }\n\n    props.setEditLink({ ...props.userLinks[index]\n    });\n    props.setShowEditLinkModal(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"links-editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"links-editor-header\",\n      children: \"Edit Links\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"create-link-btn\",\n      onClick: () => setShowNewLinkModal(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"settings-btn\",\n      onClick: handleShowSettings,\n      children: \"\\u2699\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"editable-links\",\n      children: props.userLinks.map((userLink, index) => /*#__PURE__*/_jsxDEV(EditableLink, {\n        linkId: userLink.id,\n        linkTitle: userLink.title,\n        linkUrl: userLink.url,\n        linkClicks: userLink.clicks,\n        handleEditLink: handleEditLink,\n        handleDeleteLink: handleDeleteLink\n      }, userLink.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), showNewLinkModal && /*#__PURE__*/_jsxDEV(CreateLinkModal, {\n      setShowNewLinkModal: setShowNewLinkModal,\n      setUserLinks: props.setUserLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSettings,\n      onHide: handleCloseSettings,\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"change-link-background\",\n          type: \"text\",\n          placeholder: \"Link Background Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"change-link-color\",\n          type: \"text\",\n          placeholder: \"Link Text Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"link-corner-styling-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"rounded-option\",\n            name: \"rounded-option\",\n            value: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"rounded-option\",\n            children: \"Rounded Corners\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"straight-option\",\n            name: \"straight-option\",\n            value: \"straight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"straight-option\",\n            children: \"Straight Corners\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-link-btn\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), showEditLinkModal && /*#__PURE__*/_jsxDEV(EditLinkModal, {\n      setShowEditLinkModal: setShowEditLinkModal,\n      editLink: editLink,\n      setUserLinks: props.setUserLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }, this);\n}\n\n_s(LinksEditor, \"LvtbP8sd9wc0pH18uRqq6b5YN0c=\");\n\n_c = LinksEditor;\nLinksEditor.propTypes = {\n  userLinks: PropTypes.array.isRequired,\n  setUserLinks: PropTypes.func.isRequired\n};\nexport default LinksEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinksEditor\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_editor.js"],"names":["CreateLinkModal","Modal","Button","React","useState","useCallback","PropTypes","EditLinkModal","EditableLink","LinksEditor","props","showNewLinkModal","setShowNewLinkModal","showSettings","setShowSettings","showEditLinkModal","setShowEditLinkModal","editLink","setEditLink","linkBackgroundColor","setLinkBackgroundColor","linkColor","setLinkColor","handleCloseSettings","handleShowSettings","handleDeleteLink","linkId","setUserLinks","prevUserLinks","updatedUserLinks","index","findIndex","userLink","id","splice","requestOptions","method","url","fetch","handleEditLink","userLinks","map","title","clicks","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["\n/**\n * Area where users can edit their links\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\n import './styles/links_editor.scss';\n import CreateLinkModal from './create_link_modal';\n import {Modal, Button} from 'react-bootstrap';\n import 'bootstrap/dist/css/bootstrap.min.css';\n import React, {useState, useCallback} from 'react';\n import PropTypes from 'prop-types';\nimport EditLinkModal from './edit_link_modal';\nimport EditableLink from './editable_link';\n\n function LinksEditor(props) {\n  const [showNewLinkModal, setShowNewLinkModal] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showEditLinkModal, setShowEditLinkModal] = useState(false);\n  const [editLink, setEditLink] = useState(null);\n  const [linkBackgroundColor, setLinkBackgroundColor] = useState('#adff2f');\n  const [linkColor, setLinkColor] = useState('#000000');\n\n\n  const handleCloseSettings = () => setShowSettings(false);\n  const handleShowSettings= () => setShowSettings(true);\n\n  const handleDeleteLink = useCallback((linkId) => {\n    props.setUserLinks((prevUserLinks) => {\n      let updatedUserLinks = [...prevUserLinks];\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === linkId);\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n      updatedUserLinks.splice(index, 1);\n      return updatedUserLinks;\n    }); \n\n    const requestOptions = {\n      method: 'DELETE'\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${linkId}`;\n    fetch(url, requestOptions);\n  }, []);\n\n  const handleEditLink = useCallback((linkId) => {\n    const index = props.userLinks.findIndex(userLink => userLink.id === linkId);\n    if (index == -1) {\n      return;\n    }\n\n    props.setEditLink({...props.userLinks[index]});\n    props.setShowEditLinkModal(true);\n  }, []);\n\n   return (\n     <div className=\"links-editor-container\">\n       <h2 className=\"links-editor-header\">Edit Links</h2>\n       <span className=\"create-link-btn\" onClick={() => setShowNewLinkModal(true)}>+</span>\n       <span className=\"settings-btn\" onClick={handleShowSettings}>&#9881;</span>\n        <ul className=\"editable-links\">\n          {props.userLinks.map((userLink, index) => (\n            <EditableLink\n              key={userLink.id} \n              linkId={userLink.id}\n              linkTitle={userLink.title}\n              linkUrl={userLink.url}\n              linkClicks={userLink.clicks}\n              handleEditLink={handleEditLink}\n              handleDeleteLink={handleDeleteLink}\n            />\n          ))}\n        </ul>\n      {showNewLinkModal &&\n        <CreateLinkModal \n          setShowNewLinkModal={setShowNewLinkModal}\n          setUserLinks={props.setUserLinks}\n        />\n      }\n\n      <Modal show={showSettings} onHide={handleCloseSettings} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <input className=\"change-link-background\" type=\"text\" placeholder=\"Link Background Color\" />\n        <input className=\"change-link-color\" type=\"text\" placeholder=\"Link Text Color\" />\n        <div className=\"link-corner-styling-selection\">\n        <input type=\"radio\" id=\"rounded-option\" name=\"rounded-option\" value=\"round\" />\n          <label for=\"rounded-option\">Rounded Corners</label>\n          <input type=\"radio\" id=\"straight-option\" name=\"straight-option\" value=\"straight\"/>\n          <label for=\"straight-option\">Straight Corners</label> \n        </div>\n         <button className=\"add-link-btn\">Save</button>\n        </Modal.Body>\n      </Modal>\n\n      {showEditLinkModal &&\n        <EditLinkModal\n          setShowEditLinkModal={setShowEditLinkModal}\n          editLink={editLink}\n          setUserLinks={props.setUserLinks}\n        />\n      }      \n      \n     </div>\n   );\n }\n\nLinksEditor.propTypes = {\n  userLinks: PropTypes.array.isRequired,\n  setUserLinks: PropTypes.func.isRequired\n};\n \n export default LinksEditor;"]},"metadata":{},"sourceType":"module"}