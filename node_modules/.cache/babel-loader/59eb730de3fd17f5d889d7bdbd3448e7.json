{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_preview.js\";\n\n/**\n * Area where users can preview their links\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\nimport PreviewLink from './preview_link';\nimport './styles/links_preview.scss';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LinksPreview = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"links-preview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"links-preview-header\",\n      children: \"Links Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"live-links\",\n      children: props.userLinks.map((userLink, index) => /*#__PURE__*/_jsxDEV(PreviewLink, {\n        linkId: userLink.id,\n        linkTitle: userLink.title,\n        linkUrl: userLink.url,\n        linkClicks: userLink.clicks,\n        linkBackgroundColor: props.linkBackgroundColor,\n        linkColor: props.linkColor,\n        isLinkEdgeRounded: props.isLinkEdgeRounded,\n        setUserLinks: props.setUserLinks\n      }, userLink.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LinksPreview;\nLinksPreview.propTypes = {\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\nexport default LinksPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinksPreview\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_preview.js"],"names":["PreviewLink","PropTypes","LinksPreview","props","userLinks","map","userLink","index","id","title","url","clicks","linkBackgroundColor","linkColor","isLinkEdgeRounded","setUserLinks","propTypes","string","isRequired","bool"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAO,6BAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACGA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,QAAD,EAAWC,KAAX,kBACnB,QAAC,WAAD;AAEE,QAAA,MAAM,EAAED,QAAQ,CAACE,EAFnB;AAGE,QAAA,SAAS,EAAEF,QAAQ,CAACG,KAHtB;AAIE,QAAA,OAAO,EAAEH,QAAQ,CAACI,GAJpB;AAKE,QAAA,UAAU,EAAEJ,QAAQ,CAACK,MALvB;AAME,QAAA,mBAAmB,EAAER,KAAK,CAACS,mBAN7B;AAOE,QAAA,SAAS,EAAET,KAAK,CAACU,SAPnB;AAQE,QAAA,iBAAiB,EAAEV,KAAK,CAACW,iBAR3B;AASE,QAAA,YAAY,EAAEX,KAAK,CAACY;AATtB,SACOT,QAAQ,CAACE,EADhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBA,CArBF;;KAAMN,Y;AAuBNA,YAAY,CAACc,SAAb,GAAyB;AACvBJ,EAAAA,mBAAmB,EAAEX,SAAS,CAACgB,MAAV,CAAiBC,UADf;AAEvBL,EAAAA,SAAS,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UAFL;AAGvBJ,EAAAA,iBAAiB,EAAEb,SAAS,CAACkB,IAAV,CAAeD;AAHX,CAAzB;AAMA,eAAehB,YAAf","sourcesContent":["\n/**\n * Area where users can preview their links\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\nimport PreviewLink from './preview_link';\nimport './styles/links_preview.scss';\nimport PropTypes from 'prop-types';\n\nconst LinksPreview = (props) => {\n  return (\n    <div className=\"links-preview-container\">\n      <h2 className=\"links-preview-header\">Links Preview</h2>\n      <ul className=\"live-links\">\n        {props.userLinks.map((userLink, index) => (\n          <PreviewLink\n            key={userLink.id}\n            linkId={userLink.id}\n            linkTitle={userLink.title}\n            linkUrl={userLink.url}\n            linkClicks={userLink.clicks}\n            linkBackgroundColor={props.linkBackgroundColor}\n            linkColor={props.linkColor}\n            isLinkEdgeRounded={props.isLinkEdgeRounded}\n            setUserLinks={props.setUserLinks}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n }\n\nLinksPreview.propTypes = {\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\n \nexport default LinksPreview;"]},"metadata":{},"sourceType":"module"}