{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/preview_link.js\";\n\n/**\n * Preview link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\nimport PropTypes from 'prop-types';\nimport './styles/preview_link.scss';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PreviewLink(props) {\n  console.log(\"rendering preview link\");\n  const listStyle = {\n    backgroundColor: props.linkBackgroundColor\n  };\n  const anchorStyle = {\n    color: props.linkColor\n  };\n  const isLinkRoundedEdgeCSSClass = props.isLinkEdgeRounded ? 'rounded-link-edge' : '';\n\n  const trackLinkClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `live-link-item ${isLinkRoundedEdgeCSSClass}`,\n    style: listStyle,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"live-link-anchor\",\n      href: props.linkUrl,\n      style: anchorStyle,\n      children: props.linkTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PreviewLink;\nPreviewLink.propTypes = {\n  linkId: PropTypes.number.isRequired,\n  linkTitle: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\nexport default _c2 = /*#__PURE__*/React.memo(PreviewLink);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PreviewLink\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/preview_link.js"],"names":["PropTypes","React","useState","PreviewLink","props","console","log","listStyle","backgroundColor","linkBackgroundColor","anchorStyle","color","linkColor","isLinkRoundedEdgeCSSClass","isLinkEdgeRounded","trackLinkClick","linkUrl","linkTitle","propTypes","linkId","number","isRequired","string","bool","memo"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AAEC,OAAOA,SAAP,MAAsB,YAAtB;AACD,OAAO,4BAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEC,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,eAAe,EAAEJ,KAAK,CAACK;AADP,GAAlB;AAIA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAEP,KAAK,CAACQ;AADK,GAApB;AAIA,QAAMC,yBAAyB,GAAGT,KAAK,CAACU,iBAAN,GAA0B,mBAA1B,GAAgD,EAAlF;;AAEA,QAAMC,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIC,sBACC;AAAI,IAAA,SAAS,EAAG,kBAAiBF,yBAA0B,EAA3D;AAA8D,IAAA,KAAK,EAAEN,SAArE;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAgC,MAAA,IAAI,EAAEH,KAAK,CAACY,OAA5C;AAAqD,MAAA,KAAK,EAAEN,WAA5D;AAAA,gBAA0EN,KAAK,CAACa;AAAhF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKD;;KAvBQd,W;AAyBVA,WAAW,CAACe,SAAZ,GAAwB;AACtBC,EAAAA,MAAM,EAAEnB,SAAS,CAACoB,MAAV,CAAiBC,UADH;AAEtBJ,EAAAA,SAAS,EAAEjB,SAAS,CAACsB,MAAV,CAAiBD,UAFN;AAGtBL,EAAAA,OAAO,EAAEhB,SAAS,CAACsB,MAAV,CAAiBD,UAHJ;AAItBZ,EAAAA,mBAAmB,EAAET,SAAS,CAACsB,MAAV,CAAiBD,UAJhB;AAKtBT,EAAAA,SAAS,EAAEZ,SAAS,CAACsB,MAAV,CAAiBD,UALN;AAMtBP,EAAAA,iBAAiB,EAAEd,SAAS,CAACuB,IAAV,CAAeF;AANZ,CAAxB;AASC,kCAAepB,KAAK,CAACuB,IAAN,CAAWrB,WAAX,CAAf","sourcesContent":["\n/**\n * Preview link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\n import PropTypes from 'prop-types';\nimport './styles/preview_link.scss';\nimport React, {useState} from 'react';\n\n function PreviewLink(props) {\n\n  console.log(\"rendering preview link\");\n\n  const listStyle = {\n    backgroundColor: props.linkBackgroundColor\n  };\n\n  const anchorStyle = {\n    color: props.linkColor\n  }\n\n  const isLinkRoundedEdgeCSSClass = props.isLinkEdgeRounded ? 'rounded-link-edge' : '';\n\n  const trackLinkClick = () => {\n\n  };\n\n   return (\n    <li className={`live-link-item ${isLinkRoundedEdgeCSSClass}`} style={listStyle} >\n      <a className=\"live-link-anchor\" href={props.linkUrl} style={anchorStyle}>{props.linkTitle}</a>\n    </li>\n   );\n }\n\nPreviewLink.propTypes = {\n  linkId: PropTypes.number.isRequired,\n  linkTitle: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\n \n export default React.memo(PreviewLink);"]},"metadata":{},"sourceType":"module"}