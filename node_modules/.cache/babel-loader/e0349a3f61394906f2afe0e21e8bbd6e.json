{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_editor.js\",\n    _s = $RefreshSig$();\n\n/**\n * Area where users can edit their links\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\nimport './styles/links_editor.scss';\nimport CreateLinkModal from './create_link_modal';\nimport { Modal, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport EditLinkModal from './edit_link_modal';\nimport EditableLink from './editable_link';\nimport SettingsModal from './settings_modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LinksEditor(props) {\n  _s();\n\n  const [showNewLinkModal, setShowNewLinkModal] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showEditLinkModal, setShowEditLinkModal] = useState(false);\n  const [showConfirmDeleteModal, setShowConfirmDeleteModal] = useState(false);\n  const [deleteLinkId, setDeleteLinkId] = useState(-1);\n  const [editLink, setEditLink] = useState(null);\n\n  const handleCloseSettings = () => setShowSettings(false);\n\n  const handleShowSettings = () => setShowSettings(true);\n\n  const handleDeleteLink = useCallback(linkId => {\n    setShowConfirmDeleteModal(true);\n    setDeleteLinkId(linkId);\n  }, []);\n\n  const deleteLink = () => {\n    props.setUserLinks(prevUserLinks => {\n      let updatedUserLinks = [...prevUserLinks];\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === deleteLinkId);\n\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n\n      updatedUserLinks.splice(index, 1);\n      return updatedUserLinks;\n    });\n    setShowConfirmDeleteModal(false);\n    const requestOptions = {\n      method: 'DELETE'\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${deleteLinkId}`;\n    fetch(url, requestOptions);\n  };\n\n  const handleEditLink = useCallback(linkId => {\n    const index = props.userLinks.findIndex(userLink => userLink.id === linkId);\n\n    if (index == -1) {\n      return;\n    }\n\n    setEditLink({ ...props.userLinks[index]\n    });\n    setShowEditLinkModal(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"links-editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"links-editor-header\",\n      children: \"Edit Links\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"settings-btn\",\n      onClick: handleShowSettings,\n      children: \"\\u2699\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"editable-links\",\n      children: props.userLinks.map((userLink, index) => /*#__PURE__*/_jsxDEV(EditableLink, {\n        linkId: userLink.id,\n        linkTitle: userLink.title,\n        linkUrl: userLink.url,\n        linkClicks: userLink.clicks,\n        handleEditLink: handleEditLink,\n        handleDeleteLink: handleDeleteLink\n      }, userLink.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-link-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"create-link-btn\",\n        onClick: () => setShowNewLinkModal(true),\n        children: \"Add Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), showNewLinkModal && /*#__PURE__*/_jsxDEV(CreateLinkModal, {\n      setShowNewLinkModal: setShowNewLinkModal,\n      setUserLinks: props.setUserLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(SettingsModal, {\n      linkBackgroundColor: props.linkBackgroundColor,\n      linkColor: props.linkColor,\n      isLinkEdgeRounded: props.isLinkEdgeRounded,\n      setLinkBackgroundColor: props.setLinkBackgroundColor,\n      setLinkColor: props.setLinkColor,\n      setIsLinkEdgeRounded: props.setIsLinkEdgeRounded,\n      setShowSettings: setShowSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), showEditLinkModal && /*#__PURE__*/_jsxDEV(EditLinkModal, {\n      setShowEditLinkModal: setShowEditLinkModal,\n      editLink: editLink,\n      setUserLinks: props.setUserLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), showConfirmDeleteModal && /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConfirmDeleteModal,\n      onHide: () => setShowConfirmDeleteModal(false),\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Are you sure you want to delete this link?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteLink(),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 6\n  }, this);\n}\n\n_s(LinksEditor, \"kVppip0F+6ZbT9hEUNV+/TMyP8U=\");\n\n_c = LinksEditor;\nLinksEditor.propTypes = {\n  userLinks: PropTypes.array.isRequired,\n  setUserLinks: PropTypes.func.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired,\n  setLinkBackgroundColor: PropTypes.func.isRequired,\n  setLinkColor: PropTypes.func.isRequired,\n  setIsLinkEdgeRounded: PropTypes.func.isRequired\n};\nexport default LinksEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinksEditor\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_editor.js"],"names":["CreateLinkModal","Modal","Button","React","useState","useCallback","PropTypes","EditLinkModal","EditableLink","SettingsModal","LinksEditor","props","showNewLinkModal","setShowNewLinkModal","showSettings","setShowSettings","showEditLinkModal","setShowEditLinkModal","showConfirmDeleteModal","setShowConfirmDeleteModal","deleteLinkId","setDeleteLinkId","editLink","setEditLink","handleCloseSettings","handleShowSettings","handleDeleteLink","linkId","deleteLink","setUserLinks","prevUserLinks","updatedUserLinks","index","findIndex","userLink","id","splice","requestOptions","method","url","fetch","handleEditLink","userLinks","map","title","clicks","linkBackgroundColor","linkColor","isLinkEdgeRounded","setLinkBackgroundColor","setLinkColor","setIsLinkEdgeRounded","propTypes","array","isRequired","func","string","bool"],"mappings":"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","sourcesContent":["\n/**\n * Area where users can edit their links\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\n import './styles/links_editor.scss';\n import CreateLinkModal from './create_link_modal';\n import {Modal, Button} from 'react-bootstrap';\n import 'bootstrap/dist/css/bootstrap.min.css';\n import React, {useState, useCallback} from 'react';\n import PropTypes from 'prop-types';\nimport EditLinkModal from './edit_link_modal';\nimport EditableLink from './editable_link';\nimport SettingsModal from './settings_modal';\n\n function LinksEditor(props) {\n  const [showNewLinkModal, setShowNewLinkModal] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showEditLinkModal, setShowEditLinkModal] = useState(false);\n  const [showConfirmDeleteModal, setShowConfirmDeleteModal] = useState(false);\n  const [deleteLinkId, setDeleteLinkId] = useState(-1);\n  const [editLink, setEditLink] = useState(null);\n\n\n  const handleCloseSettings = () => setShowSettings(false);\n  const handleShowSettings= () => setShowSettings(true);\n\n  const handleDeleteLink = useCallback((linkId) => {\n    setShowConfirmDeleteModal(true);\n    setDeleteLinkId(linkId);\n  }, []);\n\n  const deleteLink = () => {\n    props.setUserLinks((prevUserLinks) => {\n      let updatedUserLinks = [...prevUserLinks];\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === deleteLinkId);\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n      updatedUserLinks.splice(index, 1);\n      return updatedUserLinks;\n    }); \n    setShowConfirmDeleteModal(false);\n\n    const requestOptions = {\n      method: 'DELETE'\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${deleteLinkId}`;\n    fetch(url, requestOptions);\n  }\n\n  const handleEditLink = useCallback((linkId) => {\n    const index = props.userLinks.findIndex(userLink => userLink.id === linkId);\n    if (index == -1) {\n      return;\n    }\n\n    setEditLink({...props.userLinks[index]});\n    setShowEditLinkModal(true);\n  }, []);\n\n   return (\n     <div className=\"links-editor-container\">\n       <h2 className=\"links-editor-header\">Edit Links</h2>\n       <span className=\"settings-btn\" onClick={handleShowSettings}>&#9881;</span>\n        <ul className=\"editable-links\">\n          {props.userLinks.map((userLink, index) => (\n            <EditableLink\n              key={userLink.id} \n              linkId={userLink.id}\n              linkTitle={userLink.title}\n              linkUrl={userLink.url}\n              linkClicks={userLink.clicks}\n              handleEditLink={handleEditLink}\n              handleDeleteLink={handleDeleteLink}\n            />\n          ))}\n        </ul>\n        <div className=\"create-link-btn-container\">\n          <span className=\"create-link-btn\" onClick={() => setShowNewLinkModal(true)}>Add Link</span>\n        </div>\n      {showNewLinkModal &&\n        <CreateLinkModal \n          setShowNewLinkModal={setShowNewLinkModal}\n          setUserLinks={props.setUserLinks}\n        />\n      }\n\n      {showSettings &&\n        <SettingsModal \n          linkBackgroundColor={props.linkBackgroundColor}\n          linkColor={props.linkColor}\n          isLinkEdgeRounded={props.isLinkEdgeRounded}\n          setLinkBackgroundColor={props.setLinkBackgroundColor}\n          setLinkColor={props.setLinkColor}\n          setIsLinkEdgeRounded={props.setIsLinkEdgeRounded}\n          setShowSettings={setShowSettings}\n        />\n      }\n\n      {showEditLinkModal &&\n        <EditLinkModal\n          setShowEditLinkModal={setShowEditLinkModal}\n          editLink={editLink}\n          setUserLinks={props.setUserLinks}\n        />\n      }\n\n      {showConfirmDeleteModal &&\n        <Modal show={showConfirmDeleteModal} onHide={() => setShowConfirmDeleteModal(false)} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Are you sure you want to delete this link?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <button onClick={() => setShowConfirmDeleteModal(false)}>Cancel</button>\n          <button onClick={() => deleteLink()}>Delete</button>\n        </Modal.Body>\n        </Modal>\n      }      \n      \n     </div>\n   );\n }\n\nLinksEditor.propTypes = {\n  userLinks: PropTypes.array.isRequired,\n  setUserLinks: PropTypes.func.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired,\n  setLinkBackgroundColor: PropTypes.func.isRequired,\n  setLinkColor: PropTypes.func.isRequired,\n  setIsLinkEdgeRounded: PropTypes.func.isRequired\n};\n \n export default LinksEditor;"]},"metadata":{},"sourceType":"module"}