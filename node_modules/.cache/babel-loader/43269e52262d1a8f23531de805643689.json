{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/edit_link_modal.js\",\n    _s = $RefreshSig$();\n\n/**\n * Modal to edit link\n *\n * @copyright 2021 Beacons - All rights reserved\n */\nimport './styles/beacons_app.scss';\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditLinkModal(props) {\n  _s();\n\n  const [linkTitle, setLinkTitle] = useState('');\n  const [linkUrl, setLinkUrl] = useState('');\n\n  const handleLinkTitleChange = event => {\n    const intputTitle = event.target.value;\n    setLinkTitle(intputTitle);\n  };\n\n  const handleLinkUrlChange = event => {\n    const intputUrl = event.target.value;\n    setLinkUrl(intputUrl);\n  };\n\n  const handleSubmit = linkId => {\n    const newUserLink = {\n      title: linkTitle,\n      url: linkUrl\n    }; //props.setUserLinks(prevUserLinks => {\n    //return [...prevUserLinks, newUserLink];\n    //});\n    //saveNewLink(newUserLink);\n    //props.setShowNewLinkModal(false);\n  };\n\n  const saveNewLink = newLink => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newLink)\n    };\n    fetch('https://retoolapi.dev/lqtPSO/links', requestOptions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: () => props.setShowEditLinkModal(false),\n    animation: false,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-link-title\",\n        type: \"text\",\n        value: props.editLink.title,\n        onChange: handleLinkTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-link-url\",\n        type: \"text\",\n        value: props.editLink.url,\n        onChange: handleLinkUrlChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-link-btn\",\n        onClick: () => handleSubmit(props.editLink.id),\n        children: \"Edit Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditLinkModal, \"iykMcI11DDB2O+6HYnDwhEiUWSg=\");\n\n_c = EditLinkModal;\nEditLinkModal.propTypes = {\n  setShowEditLinkModal: PropTypes.func.isRequired,\n  editLink: PropTypes.object.isRequired,\n  setUserLinks: PropTypes.func.isRequired\n};\nexport default EditLinkModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditLinkModal\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/edit_link_modal.js"],"names":["React","useState","useEffect","Modal","Button","PropTypes","EditLinkModal","props","linkTitle","setLinkTitle","linkUrl","setLinkUrl","handleLinkTitleChange","event","intputTitle","target","value","handleLinkUrlChange","intputUrl","handleSubmit","linkId","newUserLink","title","url","saveNewLink","newLink","requestOptions","method","headers","body","JSON","stringify","fetch","setShowEditLinkModal","editLink","id","propTypes","func","isRequired","object","setUserLinks"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEC,OAAO,2BAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AAEF,QAAMW,qBAAqB,GAAIC,KAAD,IAAW;AACvC,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACAP,IAAAA,YAAY,CAACK,WAAD,CAAZ;AACD,GAHD;;AAKA,QAAMG,mBAAmB,GAAIJ,KAAD,IAAW;AACrC,UAAMK,SAAS,GAAGL,KAAK,CAACE,MAAN,CAAaC,KAA/B;AACAL,IAAAA,UAAU,CAACO,SAAD,CAAV;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,UAAMC,WAAW,GAAG;AAClBC,MAAAA,KAAK,EAAEd,SADW;AAElBe,MAAAA,GAAG,EAAEb;AAFa,KAApB,CAD+B,CAK/B;AACE;AACF;AACA;AACA;AACD,GAVD;;AAYA,QAAMc,WAAW,GAAIC,OAAD,IAAa;AAC/B,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAHe,KAAvB;AAKAO,IAAAA,KAAK,CAAC,oCAAD,EAAuCN,cAAvC,CAAL;AACD,GAPD;;AASE,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAE,IAAb;AAAmB,IAAA,MAAM,EAAE,MAAMnB,KAAK,CAAC0B,oBAAN,CAA2B,KAA3B,CAAjC;AAAoE,IAAA,SAAS,EAAE,KAA/E;AAAA,4BACA,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,KAAD,CAAO,IAAP;AAAA,8BACA;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAA+C,QAAA,KAAK,EAAE1B,KAAK,CAAC2B,QAAN,CAAeZ,KAArE;AAA4E,QAAA,QAAQ,EAAEV;AAAtF;AAAA;AAAA;AAAA;AAAA,cADA,eAEC;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,KAAK,EAAEL,KAAK,CAAC2B,QAAN,CAAeX,GAAnE;AAAwE,QAAA,QAAQ,EAAEN;AAAlF;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAE,MAAME,YAAY,CAACZ,KAAK,CAAC2B,QAAN,CAAeC,EAAhB,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA/CQ7B,a;;KAAAA,a;AAiDTA,aAAa,CAAC8B,SAAd,GAA0B;AACxBH,EAAAA,oBAAoB,EAAE5B,SAAS,CAACgC,IAAV,CAAeC,UADb;AAExBJ,EAAAA,QAAQ,EAAE7B,SAAS,CAACkC,MAAV,CAAiBD,UAFH;AAGxBE,EAAAA,YAAY,EAAEnC,SAAS,CAACgC,IAAV,CAAeC;AAHL,CAA1B;AAMA,eAAehC,aAAf","sourcesContent":["/**\n * Modal to edit link\n *\n * @copyright 2021 Beacons - All rights reserved\n */\n\n import './styles/beacons_app.scss';\n import React, {useState, useEffect} from 'react';\n import {Modal, Button} from 'react-bootstrap';\n import PropTypes from 'prop-types';\n\nfunction EditLinkModal(props) {\n  const [linkTitle, setLinkTitle] = useState('');\n  const [linkUrl, setLinkUrl] = useState('');\n\nconst handleLinkTitleChange = (event) => {\n  const intputTitle = event.target.value;\n  setLinkTitle(intputTitle);\n};\n\nconst handleLinkUrlChange = (event) => {\n  const intputUrl = event.target.value;\n  setLinkUrl(intputUrl);\n};\n\nconst handleSubmit = (linkId) => {\n  const newUserLink = {\n    title: linkTitle,\n    url: linkUrl\n  }\n  //props.setUserLinks(prevUserLinks => {\n    //return [...prevUserLinks, newUserLink];\n  //});\n  //saveNewLink(newUserLink);\n  //props.setShowNewLinkModal(false);\n};\n\nconst saveNewLink = (newLink) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(newLink)\n  };\n  fetch('https://retoolapi.dev/lqtPSO/links', requestOptions);\n}\n\n  return (\n    <Modal show={true} onHide={() => props.setShowEditLinkModal(false)} animation={false}>\n    <Modal.Header closeButton>\n      <Modal.Title>Edit Post</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n    <input className=\"edit-link-title\" type=\"text\" value={props.editLink.title} onChange={handleLinkTitleChange} />\n     <input className=\"edit-link-url\" type=\"text\" value={props.editLink.url} onChange={handleLinkUrlChange} />\n     <button className=\"edit-link-btn\" onClick={() => handleSubmit(props.editLink.id)}>Edit Link</button>\n    </Modal.Body>\n  </Modal>\n  );\n}\n\nEditLinkModal.propTypes = {\n  setShowEditLinkModal: PropTypes.func.isRequired,\n  editLink: PropTypes.object.isRequired,\n  setUserLinks: PropTypes.func.isRequired\n};\n\nexport default EditLinkModal;"]},"metadata":{},"sourceType":"module"}