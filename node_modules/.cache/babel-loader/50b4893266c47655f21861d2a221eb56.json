{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/edit_link_modal.js\",\n    _s = $RefreshSig$();\n\n/**\n * Modal to edit link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\nimport './styles/beacons_app.scss';\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditLinkModal(props) {\n  _s();\n\n  const [linkTitle, setLinkTitle] = useState(props.editLink.title);\n  const [linkUrl, setLinkUrl] = useState(props.editLink.url);\n  const [formErrorMsg, setFormErrorMsg] = useState('');\n\n  const handleLinkTitleChange = event => {\n    const intputTitle = event.target.value;\n    setLinkTitle(intputTitle);\n  };\n\n  const handleLinkUrlChange = event => {\n    const intputUrl = event.target.value;\n    setLinkUrl(intputUrl);\n  };\n\n  const handleSubmit = linkId => {\n    if (linkTitle == '') {\n      setFormErrorMsg('Please provide a valid title.');\n      return;\n    }\n\n    if (!validator.isURL(linkUrl)) {\n      setFormErrorMsg('Please provide a valid url.');\n      return;\n    }\n\n    props.setUserLinks(prevUserLinks => {\n      let updatedUserLinks = [...prevUserLinks];\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === linkId);\n\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n\n      props.editLink.title = linkTitle;\n      props.editLink.url = linkUrl;\n      updatedUserLinks[index] = props.editLink;\n      return updatedUserLinks;\n    });\n    const updatedLinkData = {\n      title: linkTitle,\n      url: linkUrl\n    };\n    saveNewLink(updatedLinkData, linkId);\n    props.setShowEditLinkModal(false);\n  };\n\n  const saveNewLink = (updatedLinkData, linkId) => {\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedLinkData)\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${linkId}`;\n    fetch(url, requestOptions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: () => props.setShowEditLinkModal(false),\n    animation: false,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Update Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-link-title\",\n        type: \"text\",\n        placeholder: props.editLink.title,\n        onChange: handleLinkTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Update Url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"edit-link-url\",\n        type: \"text\",\n        placeholder: props.editLink.url,\n        onChange: handleLinkUrlChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-link-btn\",\n        onClick: () => handleSubmit(props.editLink.id),\n        children: \"Edit Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formErrorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditLinkModal, \"LgFxIilJdMI/TMLZQVeeJ0yo1eo=\");\n\n_c = EditLinkModal;\nEditLinkModal.propTypes = {\n  setShowEditLinkModal: PropTypes.func.isRequired,\n  editLink: PropTypes.object.isRequired,\n  setUserLinks: PropTypes.func.isRequired\n};\nexport default EditLinkModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditLinkModal\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/edit_link_modal.js"],"names":["React","useState","useEffect","Modal","Button","PropTypes","validator","EditLinkModal","props","linkTitle","setLinkTitle","editLink","title","linkUrl","setLinkUrl","url","formErrorMsg","setFormErrorMsg","handleLinkTitleChange","event","intputTitle","target","value","handleLinkUrlChange","intputUrl","handleSubmit","linkId","isURL","setUserLinks","prevUserLinks","updatedUserLinks","index","findIndex","userLink","id","updatedLinkData","saveNewLink","setShowEditLinkModal","requestOptions","method","headers","body","JSON","stringify","fetch","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["/**\n * Modal to edit link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\n import './styles/beacons_app.scss';\n import React, {useState, useEffect} from 'react';\n import {Modal, Button} from 'react-bootstrap';\n import PropTypes from 'prop-types';\n import validator from 'validator'\n\nfunction EditLinkModal(props) {\n  const [linkTitle, setLinkTitle] = useState(props.editLink.title);\n  const [linkUrl, setLinkUrl] = useState(props.editLink.url);\n  const [formErrorMsg, setFormErrorMsg] = useState('');\n\nconst handleLinkTitleChange = (event) => {\n  const intputTitle = event.target.value;\n  setLinkTitle(intputTitle);\n};\n\nconst handleLinkUrlChange = (event) => {\n  const intputUrl = event.target.value;\n  setLinkUrl(intputUrl);\n};\n\nconst handleSubmit = (linkId) => {\n  if (linkTitle == '') {\n    setFormErrorMsg('Please provide a valid title.');\n    return;\n  }\n  if (!validator.isURL(linkUrl)) {\n    setFormErrorMsg('Please provide a valid url.');\n    return;\n  }\n\n  props.setUserLinks(prevUserLinks => {\n    let updatedUserLinks = [...prevUserLinks]\n    const index = updatedUserLinks.findIndex(userLink => userLink.id === linkId);\n    if (index == -1) {\n      return updatedUserLinks;\n    }\n\n    props.editLink.title = linkTitle;\n    props.editLink.url = linkUrl;\n    updatedUserLinks[index] = props.editLink\n    return updatedUserLinks;\n  });\n\n  const updatedLinkData = {\n    title: linkTitle,\n    url: linkUrl\n  }\n  saveNewLink(updatedLinkData, linkId);\n  props.setShowEditLinkModal(false);\n};\n\nconst saveNewLink = (updatedLinkData, linkId) => {\n  const requestOptions = {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(updatedLinkData)\n  };\n  const url = `https://retoolapi.dev/lqtPSO/links/${linkId}`;\n  fetch(url, requestOptions);\n}\n\n  return (\n    <Modal show={true} onHide={() => props.setShowEditLinkModal(false)} animation={false}>\n    <Modal.Header closeButton>\n      <Modal.Title>Edit Post</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      <span>Update Title</span>\n    <input className=\"edit-link-title\" type=\"text\" placeholder={props.editLink.title} onChange={handleLinkTitleChange} />\n    <span>Update Url</span>\n     <input className=\"edit-link-url\" type=\"text\" placeholder={props.editLink.url} onChange={handleLinkUrlChange} />\n     <button className=\"edit-link-btn\" onClick={() => handleSubmit(props.editLink.id)}>Edit Link</button>\n     <span>{formErrorMsg}</span>\n    </Modal.Body>\n  </Modal>\n  );\n}\n\nEditLinkModal.propTypes = {\n  setShowEditLinkModal: PropTypes.func.isRequired,\n  editLink: PropTypes.object.isRequired,\n  setUserLinks: PropTypes.func.isRequired\n};\n\nexport default EditLinkModal;"]},"metadata":{},"sourceType":"module"}