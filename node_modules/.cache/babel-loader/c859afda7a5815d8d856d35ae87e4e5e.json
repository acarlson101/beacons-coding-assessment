{"ast":null,"code":"var _jsxFileName = \"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/preview_link.js\";\n\n/**\n * Preview link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\nimport PropTypes from 'prop-types';\nimport './styles/preview_link.scss';\nimport React from 'react';\nimport { BEACONS_BACKEND_API_BASE_URL } from './core/api_constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreviewLink = props => {\n  // I will keep this log here so you can confirm unnecessary link re-renders are not ocurring\n  console.log(\"rendering preview link\");\n  const INVALID_LINK_INDEX = -1;\n  const linkBackgroundStyle = {\n    backgroundColor: props.linkBackgroundColor\n  };\n  const linkColorStyle = {\n    color: props.linkColor\n  };\n  const isLinkRoundedEdgeCSSClass = props.isLinkEdgeRounded ? 'rounded-link-edge' : '';\n\n  const trackLinkClick = () => {\n    const updatedClicks = props.linkClicks + 1;\n    props.setUserLinks(prevUserLinks => {\n      let updatedUserLinks = [...prevUserLinks];\n      const updatedLinkIndex = updatedUserLinks.findIndex(userLink => userLink.id === props.linkId);\n\n      if (updatedLinkIndex === INVALID_LINK_INDEX) {\n        return updatedUserLinks;\n      }\n\n      updatedUserLinks[updatedLinkIndex].clicks = updatedClicks;\n      return updatedUserLinks;\n    });\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        clicks: updatedClicks\n      })\n    };\n    const url = `${BEACONS_BACKEND_API_BASE_URL}/${props.linkId}`;\n    fetch(url, requestOptions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `live-link-item ${isLinkRoundedEdgeCSSClass}`,\n    style: linkBackgroundStyle,\n    onClick: trackLinkClick,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"live-link-anchor\",\n      href: props.linkUrl,\n      style: linkColorStyle,\n      target: \"_blank\",\n      children: props.linkTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PreviewLink;\nPreviewLink.propTypes = {\n  linkId: PropTypes.number.isRequired,\n  linkTitle: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  linkClicks: PropTypes.number.isRequired,\n  setUserLinks: PropTypes.func.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\nexport default _c2 = /*#__PURE__*/React.memo(PreviewLink);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PreviewLink\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/adamcarlson/Desktop/beacons-coding-assessment/src/preview_link.js"],"names":["PropTypes","React","BEACONS_BACKEND_API_BASE_URL","PreviewLink","props","console","log","INVALID_LINK_INDEX","linkBackgroundStyle","backgroundColor","linkBackgroundColor","linkColorStyle","color","linkColor","isLinkRoundedEdgeCSSClass","isLinkEdgeRounded","trackLinkClick","updatedClicks","linkClicks","setUserLinks","prevUserLinks","updatedUserLinks","updatedLinkIndex","findIndex","userLink","id","linkId","clicks","requestOptions","method","headers","body","JSON","stringify","url","fetch","linkUrl","linkTitle","propTypes","number","isRequired","string","func","bool","memo"],"mappings":"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","sourcesContent":["\n/**\n * Preview link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\nimport PropTypes from 'prop-types';\nimport './styles/preview_link.scss';\nimport React from 'react';\nimport { BEACONS_BACKEND_API_BASE_URL } from './core/api_constants';\n\nconst PreviewLink = (props) => {\n  // I will keep this log here so you can confirm unnecessary link re-renders are not ocurring\n  console.log(\"rendering preview link\");\n\n  const INVALID_LINK_INDEX = -1;\n\n  const linkBackgroundStyle = {\n    backgroundColor: props.linkBackgroundColor\n  };\n\n  const linkColorStyle = {\n    color: props.linkColor\n  }\n\n  const isLinkRoundedEdgeCSSClass = props.isLinkEdgeRounded ? 'rounded-link-edge' : '';\n\n  const trackLinkClick = () => {\n    const updatedClicks = props.linkClicks + 1;\n    props.setUserLinks(prevUserLinks => {\n      let updatedUserLinks = [...prevUserLinks]\n      const updatedLinkIndex = updatedUserLinks.findIndex(userLink => userLink.id === props.linkId);\n      if (updatedLinkIndex === INVALID_LINK_INDEX) {\n        return updatedUserLinks;\n      }\n  \n      updatedUserLinks[updatedLinkIndex].clicks = updatedClicks;\n      return updatedUserLinks;\n    });\n\n\n    const requestOptions = {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({clicks: updatedClicks})\n    };\n    const url = `${BEACONS_BACKEND_API_BASE_URL}/${props.linkId}`;\n    fetch(url, requestOptions);\n  };\n\n  return (\n    <li className={`live-link-item ${isLinkRoundedEdgeCSSClass}`} style={linkBackgroundStyle} onClick={trackLinkClick}>\n      <a className=\"live-link-anchor\" href={props.linkUrl} style={linkColorStyle} target=\"_blank\">{props.linkTitle}</a>\n    </li>\n  );\n }\n\nPreviewLink.propTypes = {\n  linkId: PropTypes.number.isRequired,\n  linkTitle: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  linkClicks: PropTypes.number.isRequired,\n  setUserLinks: PropTypes.func.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\n \nexport default React.memo(PreviewLink);"]},"metadata":{},"sourceType":"module"}