[{"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/index.js":"1","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/beacons_app.js":"2","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_editor.js":"3","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_preview.js":"4","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/create_link_modal.js":"5","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/edit_link_modal.js":"6","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/editable_link.js":"7","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/preview_link.js":"8","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/settings_modal.js":"9"},{"size":347,"mtime":1627086509751,"results":"10","hashOfConfig":"11"},{"size":1843,"mtime":1627151641512,"results":"12","hashOfConfig":"11"},{"size":3728,"mtime":1627152409927,"results":"13","hashOfConfig":"11"},{"size":950,"mtime":1627151676318,"results":"14","hashOfConfig":"11"},{"size":2341,"mtime":1627153420680,"results":"15","hashOfConfig":"11"},{"size":2629,"mtime":1627153006223,"results":"16","hashOfConfig":"11"},{"size":1172,"mtime":1627148905219,"results":"17","hashOfConfig":"11"},{"size":1939,"mtime":1627152256523,"results":"18","hashOfConfig":"11"},{"size":2909,"mtime":1627151090848,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6nvh1u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/index.js",[],["43","44"],"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/beacons_app.js",[],"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_editor.js",["45","46","47","48","49","50","51"],"\n/**\n * Area where users can edit their links\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\n import './styles/links_editor.scss';\n import CreateLinkModal from './create_link_modal';\n import {Modal, Button} from 'react-bootstrap';\n import 'bootstrap/dist/css/bootstrap.min.css';\n import React, {useState, useCallback} from 'react';\n import PropTypes from 'prop-types';\nimport EditLinkModal from './edit_link_modal';\nimport EditableLink from './editable_link';\nimport SettingsModal from './settings_modal';\n\n function LinksEditor(props) {\n  const [showNewLinkModal, setShowNewLinkModal] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showEditLinkModal, setShowEditLinkModal] = useState(false);\n  const [editLink, setEditLink] = useState(null);\n\n\n  const handleCloseSettings = () => setShowSettings(false);\n  const handleShowSettings= () => setShowSettings(true);\n\n  const handleDeleteLink = useCallback((linkId) => {\n    props.setUserLinks((prevUserLinks) => {\n      let updatedUserLinks = [...prevUserLinks];\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === linkId);\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n      updatedUserLinks.splice(index, 1);\n      return updatedUserLinks;\n    }); \n\n    const requestOptions = {\n      method: 'DELETE'\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${linkId}`;\n    fetch(url, requestOptions);\n  }, []);\n\n  const handleEditLink = useCallback((linkId) => {\n    const index = props.userLinks.findIndex(userLink => userLink.id === linkId);\n    if (index == -1) {\n      return;\n    }\n\n    setEditLink({...props.userLinks[index]});\n    setShowEditLinkModal(true);\n  }, []);\n\n   return (\n     <div className=\"links-editor-container\">\n       <h2 className=\"links-editor-header\">Edit Links</h2>\n       <span className=\"create-link-btn\" onClick={() => setShowNewLinkModal(true)}>+</span>\n       <span className=\"settings-btn\" onClick={handleShowSettings}>&#9881;</span>\n        <ul className=\"editable-links\">\n          {props.userLinks.map((userLink, index) => (\n            <EditableLink\n              key={userLink.id} \n              linkId={userLink.id}\n              linkTitle={userLink.title}\n              linkUrl={userLink.url}\n              linkClicks={userLink.clicks}\n              handleEditLink={handleEditLink}\n              handleDeleteLink={handleDeleteLink}\n            />\n          ))}\n        </ul>\n      {showNewLinkModal &&\n        <CreateLinkModal \n          setShowNewLinkModal={setShowNewLinkModal}\n          setUserLinks={props.setUserLinks}\n        />\n      }\n\n      {showSettings &&\n        <SettingsModal \n          linkBackgroundColor={props.linkBackgroundColor}\n          linkColor={props.linkColor}\n          isLinkEdgeRounded={props.isLinkEdgeRounded}\n          setLinkBackgroundColor={props.setLinkBackgroundColor}\n          setLinkColor={props.setLinkColor}\n          setIsLinkEdgeRounded={props.setIsLinkEdgeRounded}\n          setShowSettings={setShowSettings}\n        />\n      }\n\n      {showEditLinkModal &&\n        <EditLinkModal\n          setShowEditLinkModal={setShowEditLinkModal}\n          editLink={editLink}\n          setUserLinks={props.setUserLinks}\n        />\n      }      \n      \n     </div>\n   );\n }\n\nLinksEditor.propTypes = {\n  userLinks: PropTypes.array.isRequired,\n  setUserLinks: PropTypes.func.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired,\n  setLinkBackgroundColor: PropTypes.func.isRequired,\n  setLinkColor: PropTypes.func.isRequired,\n  setIsLinkEdgeRounded: PropTypes.func.isRequired\n};\n \n export default LinksEditor;","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/links_preview.js",[],"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/create_link_modal.js",["52","53","54","55","56"],"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/edit_link_modal.js",["57","58","59","60"],"/Users/adamcarlson/Desktop/beacons-coding-assessment/src/editable_link.js",["61","62"],"\n/**\n * Editable link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\n import PropTypes from 'prop-types';\nimport './styles/editable_link.scss';\nimport React, {useState, memo} from 'react';\nimport EditLinkModal from './edit_link_modal';\n\nfunction EditableLink(props) {\n\n  console.log(\"Rendering editable link\");\n\n   return (\n    <li className=\"editable-link-item\">\n      <span className=\"editable-link-title\">Link Title: {props.linkTitle}</span>\n      <span className=\"editable-link-url\">Link Url: {props.linkUrl}</span>\n      <span className=\"editable-link-clicks\">Clicks: {props.linkClicks}</span>\n      <span className=\"edit-link-btn\" onClick={() => {props.handleEditLink(props.linkId)}}>&#9998;</span>\n      <span className=\"delete-link-btn\" onClick={() => {props.handleDeleteLink(props.linkId)}}>&#x274C;</span>\n    </li>\n   );\n }\n\nEditableLink.propTypes = {\n  linkId: PropTypes.number.isRequired,\n  linkTitle: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  linkClicks: PropTypes.number.isRequired,\n  handleEditLink: PropTypes.func.isRequired,\n  handleDeleteLink: PropTypes.func.isRequired\n};\n\n export default memo(EditableLink);","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/preview_link.js",["63","64","65"],"\n/**\n * Preview link\n *\n * @copyright 2021 Adam Carlson - All rights reserved\n */\n\n import PropTypes from 'prop-types';\nimport './styles/preview_link.scss';\nimport React, {useState} from 'react';\n\n function PreviewLink(props) {\n\n  console.log(\"rendering preview link\");\n\n  const listStyle = {\n    backgroundColor: props.linkBackgroundColor\n  };\n\n  const anchorStyle = {\n    color: props.linkColor\n  }\n\n  const isLinkRoundedEdgeCSSClass = props.isLinkEdgeRounded ? 'rounded-link-edge' : '';\n\n  const trackLinkClick = () => {\n    const updatedClicks = props.linkClicks + 1;\n    props.setUserLinks(prevUserLinks => {\n      let updatedUserLinks = [...prevUserLinks]\n      const index = updatedUserLinks.findIndex(userLink => userLink.id === props.linkId);\n      if (index == -1) {\n        return updatedUserLinks;\n      }\n  \n      updatedUserLinks[index].clicks = updatedClicks;\n      console.log(\"final array\");\n      console.log(updatedUserLinks);\n      return updatedUserLinks;\n    });\n\n\n    const requestOptions = {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({clicks: updatedClicks})\n    };\n    const url = `https://retoolapi.dev/lqtPSO/links/${props.linkId}`;\n    fetch(url, requestOptions);\n  };\n\n   return (\n    <li className={`live-link-item ${isLinkRoundedEdgeCSSClass}`} style={listStyle} onClick={trackLinkClick}>\n      <a className=\"live-link-anchor\" href={props.linkUrl} style={anchorStyle} target=\"_blank\">{props.linkTitle}</a>\n    </li>\n   );\n }\n\nPreviewLink.propTypes = {\n  linkId: PropTypes.number.isRequired,\n  linkTitle: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  linkClicks: PropTypes.number.isRequired,\n  setUserLinks: PropTypes.func.isRequired,\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired\n};\n \n export default React.memo(PreviewLink);","/Users/adamcarlson/Desktop/beacons-coding-assessment/src/settings_modal.js",["66","67"],"\n/**\n * Modal to update settings\n *\n * @copyright 2021 Beacons - All rights reserved\n */\n\n import './styles/settings_modal.scss';\n import React, {useState, useEffect} from 'react';\n import {Modal, Button} from 'react-bootstrap';\n import PropTypes from 'prop-types';\n\nfunction SettingsModal(props) {\n  const [inputLinkBackgroundColor, setInputLinkBackgroundColor] = useState(props.linkBackgroundColor);\n  const [inputLinkColor, setInputLinkColor] = useState(props.linkColor);\n  const [inputIsLinkEdgeRounded, setInputIsLinkEdgeRounded] = useState(props.isLinkEdgeRounded);\n\nconst handleLinkBackgroundColor = (event) => {\n  const inputLinkBackgroundColor = event.target.value;\n  setInputLinkBackgroundColor(inputLinkBackgroundColor);\n};\n\nconst handleLinkColor = (event) => {\n  const inputLinkColor = event.target.value;\n  setInputLinkColor(inputLinkColor);\n};\n\nconst handleLinkEdgesChange = (inputIsLinkEdgeRounded) => {\n  setInputIsLinkEdgeRounded(inputIsLinkEdgeRounded);\n};\n\nconst handleSubmit = () => {\n  props.setLinkBackgroundColor(inputLinkBackgroundColor);\n  props.setLinkColor(inputLinkColor);\n  props.setIsLinkEdgeRounded(inputIsLinkEdgeRounded);\n  props.setShowSettings(false);\n};\n\n\n  return (\n    <Modal show={true} onHide={() => props.setShowSettings(false)} animation={false}>\n    <Modal.Header closeButton>\n      <Modal.Title>Settings</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n    <span className=\"settings-form-label\">Link Background Color</span>\n    <input className=\"change-link-background\" type=\"text\" placeholder={inputLinkBackgroundColor} onChange={handleLinkBackgroundColor} />\n    <span className=\"settings-form-label\">Link Color</span>\n    <input className=\"change-link-color\" type=\"text\" placeholder={inputLinkColor} onChange={handleLinkColor}/>\n    <span className=\"settings-form-label\">Link Styling</span>\n    <div className=\"link-corner-styling-selection\">\n      <input className=\"link-style-radio-btn\" type=\"radio\" id=\"rounded-option\" name=\"rounded-option\" value=\"round\" defaultChecked={props.isLinkEdgeRounded} onChange={() => handleLinkEdgesChange(true)} />\n      <label for=\"rounded-option\">Rounded Corners</label>\n      <input type=\"radio\" id=\"straight-option\" name=\"rounded-option\" value=\"straight\" defaultChecked={!props.isLinkEdgeRounded} onChange={() => handleLinkEdgesChange(false)}/>\n      <label for=\"straight-option\">Straight Corners</label> \n    </div>\n     <button className=\"add-link-btn\" onClick={handleSubmit}>Save</button>\n    </Modal.Body>\n  </Modal>\n  );\n}\n\nSettingsModal.propTypes = {\n  linkBackgroundColor: PropTypes.string.isRequired,\n  linkColor: PropTypes.string.isRequired,\n  isLinkEdgeRounded: PropTypes.bool.isRequired,\n  setLinkBackgroundColor: PropTypes.func.isRequired,\n  setLinkColor: PropTypes.func.isRequired,\n  setIsLinkEdgeRounded: PropTypes.func.isRequired,\n  setShowSettings: PropTypes.func.isRequired\n};\n\nexport default SettingsModal;",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":10,"column":10,"nodeType":"74","messageId":"75","endLine":10,"endColumn":15},{"ruleId":"72","severity":1,"message":"76","line":10,"column":17,"nodeType":"74","messageId":"75","endLine":10,"endColumn":23},{"ruleId":"72","severity":1,"message":"77","line":25,"column":9,"nodeType":"74","messageId":"75","endLine":25,"endColumn":28},{"ruleId":"78","severity":1,"message":"79","line":32,"column":17,"nodeType":"80","messageId":"81","endLine":32,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":44,"column":6,"nodeType":"84","endLine":44,"endColumn":8,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"79","line":48,"column":15,"nodeType":"80","messageId":"81","endLine":48,"endColumn":17},{"ruleId":"82","severity":1,"message":"86","line":54,"column":6,"nodeType":"84","endLine":54,"endColumn":8,"suggestions":"87"},{"ruleId":"72","severity":1,"message":"88","line":9,"column":27,"nodeType":"74","messageId":"75","endLine":9,"endColumn":36},{"ruleId":"72","severity":1,"message":"76","line":10,"column":17,"nodeType":"74","messageId":"75","endLine":10,"endColumn":23},{"ruleId":"72","severity":1,"message":"89","line":17,"column":10,"nodeType":"74","messageId":"75","endLine":17,"endColumn":17},{"ruleId":"72","severity":1,"message":"90","line":17,"column":19,"nodeType":"74","messageId":"75","endLine":17,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":31,"column":17,"nodeType":"80","messageId":"81","endLine":31,"endColumn":19},{"ruleId":"72","severity":1,"message":"88","line":8,"column":27,"nodeType":"74","messageId":"75","endLine":8,"endColumn":36},{"ruleId":"72","severity":1,"message":"76","line":9,"column":17,"nodeType":"74","messageId":"75","endLine":9,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":29,"column":17,"nodeType":"80","messageId":"81","endLine":29,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":41,"column":15,"nodeType":"80","messageId":"81","endLine":41,"endColumn":17},{"ruleId":"72","severity":1,"message":"91","line":10,"column":16,"nodeType":"74","messageId":"75","endLine":10,"endColumn":24},{"ruleId":"72","severity":1,"message":"92","line":11,"column":8,"nodeType":"74","messageId":"75","endLine":11,"endColumn":21},{"ruleId":"72","severity":1,"message":"91","line":10,"column":16,"nodeType":"74","messageId":"75","endLine":10,"endColumn":24},{"ruleId":"78","severity":1,"message":"79","line":31,"column":17,"nodeType":"80","messageId":"81","endLine":31,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":53,"column":7,"nodeType":"95","messageId":"96","endLine":53,"endColumn":96,"fix":"97"},{"ruleId":"72","severity":1,"message":"88","line":9,"column":27,"nodeType":"74","messageId":"75","endLine":9,"endColumn":36},{"ruleId":"72","severity":1,"message":"76","line":10,"column":17,"nodeType":"74","messageId":"75","endLine":10,"endColumn":23},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'handleCloseSettings' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["100"],"React Hook useCallback has a missing dependency: 'props.userLinks'. Either include it or remove the dependency array. If 'setEditLink' needs the current value of 'props.userLinks', you can also switch to useReducer instead of useState and read 'props.userLinks' in the reducer.",["101"],"'useEffect' is defined but never used.","'newLink' is assigned a value but never used.","'setNewLink' is assigned a value but never used.","'useState' is defined but never used.","'EditLinkModal' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"102","text":"103"},"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},[1477,1477]," rel=\"noreferrer\"","Update the dependencies array to be: [props]",{"range":"108","text":"109"},"Update the dependencies array to be: [props.userLinks]",{"range":"110","text":"111"},[1456,1458],"[props]",[1721,1723],"[props.userLinks]"]